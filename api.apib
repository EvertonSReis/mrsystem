FORMAT: 1A
HOST: https://localhost:8090/rest

# API MRSystem

## Sobre

Documentação referente a API MRSystem.

::: note
## Descrição dos tipos

  Tipo    | Descrição
  --:     | ----
  C       |  Caractere
  N       |  Número
  B       |  Boolean
  D       |  Decimal
  A       |  Array
  L       |  Lista de objetos
  O       |  Objeto
:::

::: note
## Descrições das Requisições

Tipo    | Descrição
--:     | ----
E       |  Entrada
S       |  Saída
:::

# Group Pessoa

## Cadastrar Pessoa [/pessoa]
  Requisição responsável por cadastrar uma nova pessoa.

### Cadastrar Pessoa [POST]

::: note
## Descrição dos campos Pessoa

  Nome                  | Requisição | Tipo  | Tamanho  | Ocorrência | Observação
  --:                   |    --      | ----  |   --     |    --      | --
  idPessoa              |    S       |   C   |    -     |    1-1     | ID da pessoa cadastrada no banco de dados.
  codigo                |    S       |   N   |    -     |    1-1     | Código da pessoa cadastrada no banco de dados.
  nome                  |   E/S      |   C   |    -     |    1-1     | Nome da pessoa a ser cadastrada.
  tipoPessoa            |   E/S      |   C   |    -     |    1-1     | Tipo de Pessoa é a identificação se `FISICA` ou `JURIDICA`.
  cpfCnpj               |   E/S      |   C   |    -     |    1-1     | CPF ou CNPJ da pessoa cadastrada de acordo ao tipo de pessoa se `FISICA` ou `JURIDICA`.
  endereco              |   E/S      |   C   |    -     |    1-1     | Nome da rua onde reside.
  bairro                |   E/S      |   C   |    -     |    1-1     | Bairro onde reside.
  cidade                |   E/S      |   C   |    -     |    1-1     | Cidade onde reside.
  estado                |   E/S      |   C   |    -     |    1-1     | Estado onde reside.
  numero                |   E/S      |   N   |    -     |    1-1     | Numero de onde reside.
  complemento           |   E/S      |   C   |    -     |    1-1     | Complemento ao endereço.
  cep                   |   E/S      |   N   |    -     |    1-1     | Cep de onde reside.
  numeroTelefone        |   E/S      |   C   |    -     |    1-1     | Número telefone da pessoa cadastrada.
  dataNascimento        |   E/S      |   C   |    -     |    1-1     | Data de nascimento da pessoa cadastrada no formato `1996-01-23`.
  tipoPessoaSistema     |   E/S      |   C   |    -     |    1-1     | Tipo de Pessoa no sistema pode ser `FUNCIONARIO`, `CLIENTE`, `FORNECEDOR`.
:::

::: note
## Códigos de retorno 400
  Erro(s) que pode(m) ocorrer durante o processamento da requisição:

  Código | Mensagem
  --:    | ----
  -1     | Existe(m) campo(s) obrigatório(s) não informado(s).
  -2     | Existe(m) campo(s) inválido(s) na requisição.
  -3     | CPF já cadastrado no banco de dados.
  -4     | CNPJ já cadastrado no banco de dados.
  -5     | O CPF informado está incorreto.
  -6     | O CNPJ informado está incorreto.
:::

::: note
## Códigos de retorno 500
  Erro(s) que pode(m) ocorrer durante o processamento da requisição:

  Código | Mensagem
  --:    | ----
  -999   | Ocorreu um problema não identificado..
:::

+ Parameters

+ Request (application/json)

{
    "nome": "José Alves",
    "tipoPessoa": "FISICA",
    "cpfCnpj": "03045453522",
    "endereco": "Av. Amélia Amado",
    "bairro": "Centro",
    "cidade": "Itabuna",
    "estado": "Bahia",
    "numero": "45",
    "complemento": "apto 102",
    "cep": "45603595",
    "numeroTelefone": "73999999999",
    "dataNascimento": "1980-03-15",
    "tipoPessoaSistema": "CLIENTE"
}

+ Response 201 (application/json)

{
    "codigo": 2,
    "nome": "José Alves",
    "tipoPessoa": "FISICA",
    "cpfCnpj": "03045453522",
    "endereco": "Av. Amélia Amado",
    "bairro": "Centro",
    "cidade": "Itabuna",
    "estado": "Bahia",
    "numero": "45",
    "complemento": "apto 102",
    "cep": "45603595",
    "numeroTelefone": "73999999999",
    "dataNascimento": "1980-03-15",
    "tipoPessoaSistema": "CLIENTE",
    "idPessoa": "6eebf92e-a5d3-486e-add0-de6e49f25ba6"
}

+ Response 400 (application/json)

{
    "erros": [
        {
            "codigo": codigo,
            "mensagem": "Mensagem do erro."
        }
    ]
}

+ Response 500 (application/json)

{
    "erros": [
        {
            "codigo": -999,
            "mensagem": "Mensagem do erro."
        }
    ]
}

## Listagem Pessoa [/pessoa?numeroPagina=1&itensPorPagina=10&tipoOrdenacao=DESC&ordenarPor=CPF_CNPJ]
  Requisição responsável por recuperar uma lista de pessoa de acordo com o filtro informado.
  - Para o parametro `tipoOrdenacao` é possível utilizar os seguintes valores: `DESC` ou `ASC`;
  - Para o parametro `ordenarPor` é possível utilizar os seguintes valores: `NOME`, `CPF_CNPJ`;
  - Caso o parametro `numeroPagina` não seja informado. Por padrão será 1;
  - Caso o parametro `itensPorPagina` não seja informado. Por padrão será 10;
  - Caso o parametro `tipoOrdenacao` não seja informado. Por padrão será DESC;
  - Caso o parametro `ordenarPor` não seja informado. Por padrão será NOME;

+ Parameters
  + numeroPagina: `1` - Número da página a ser exibida no payload.
  + itensPorPagina: `20` - Número de itens a ser exibido por página.
  + tipoOrdenacao: `DESC` - Tipo de ordenação a ser aplicada na busca.
  + ordenarPor: `NOME` - Valores permitidos a serem ordenados.

### Listar Pessoa [GET]

::: note
## Descrição de retorno

  Nome                  | Requisição | Tipo  | Tamanho  | Ocorrência | Observação
  --:                   |    --      | ----  |   --     |    --      | --
  idPessoa              |    S       |   C   |    -     |    1-1     | ID da pessoa cadastrada no banco de dados.
  codigo                |    S       |   N   |    -     |    1-1     | Código da pessoa cadastrada no banco de dados.
  nome                  |   E/S      |   C   |    -     |    1-1     | Nome da pessoa a ser cadastrada.
  tipoPessoa            |   E/S      |   C   |    -     |    1-1     | Tipo de Pessoa é a identificação se `FISICA` ou `JURIDICA`.
  cpfCnpj               |   E/S      |   C   |    -     |    1-1     | CPF ou CNPJ da pessoa cadastrada de acordo ao tipo de pessoa se `FISICA` ou `JURIDICA`.
  endereco              |   E/S      |   C   |    -     |    1-1     | Nome da rua onde reside.
  bairro                |   E/S      |   C   |    -     |    1-1     | Bairro onde reside.
  cidade                |   E/S      |   C   |    -     |    1-1     | Cidade onde reside.
  estado                |   E/S      |   C   |    -     |    1-1     | Estado onde reside.
  numero                |   E/S      |   N   |    -     |    1-1     | Numero de onde reside.
  complemento           |   E/S      |   C   |    -     |    1-1     | Complemento ao endereço.
  cep                   |   E/S      |   N   |    -     |    1-1     | Cep de onde reside.
  numeroTelefone        |   E/S      |   C   |    -     |    1-1     | Número telefone da pessoa cadastrada.
  dataNascimento        |   E/S      |   C   |    -     |    1-1     | Data de nascimento da pessoa cadastrada no formato `1996-01-23`.
  tipoPessoaSistema     |   E/S      |   C   |    -     |    1-1     | Tipo de Pessoa no sistema pode ser `FUNCIONARIO`, `CLIENTE`, `FORNECEDOR`.
:::

::: note
## Códigos de retorno 400
  Erro(s) que pode(m) ocorrer durante o processamento da requisição:

  Código | Mensagem
  --:    | ---
:::

::: note
## Códigos de retorno 500
  Erro(s) que pode(m) ocorrer durante o processamento da requisição:

  Código | Mensagem
  --:    | ---
:::

+ Request

+ Response 200 (application/json)

        {
            "paginacao": {
                "pagina": 1,
                "itensPorPagina": 10,
                "quantidadeDePaginas": 1,
                "quantidadeTotalDeItens": 2
            },
            "pessoas": [
                {
                    "codigo": 2,
                    "nome": "Everton Silva Reis",
                    "tipoPessoa": "FISICA",
                    "cpfCnpj": "06454147517",
                    "endereco": "Tv. Washington Luís",
                    "bairro": "São Roque",
                    "cidade": "Itabuna",
                    "numero": 46,
                    "complemento": "apto 901",
                    "cep": 45603595,
                    "numeroTelefone": "73982356226",
                    "dataNascimento": "1996-01-23",
                    "tipoPessoaSistema": "CLIENTE",
                    "idPessoa": "72b39aa3-7ee9-4cf5-a02f-2a308f618d3a"
                }
            ]
        }

+ Response 400 (application/json)

{
    "erros": [
        {
            "codigo": codigo,
            "mensagem": "Mensagem do erro."
        }
    ]
}

+ Response 500 (application/json)

{
    "erros": [
        {
            "codigo": -999,
            "mensagem": "Mensagem do erro."
        }
    ]
}

# Group Titulo

## Cadastrar Titulo [/pessoa]
  Requisição responsável por cadastrar um novo titulo.

### Cadastrar Titulo [POST]

::: note
## Descrição dos campos Pessoa

  Nome                  | Requisição | Tipo  | Tamanho  | Ocorrência | Observação
  --:                   |    --      | ----  |   --     |    --      | --
  idTitulo              |    S       |   C   |    -     |    1-1     | ID do título cadastrado no banco de dados.
  pessoa                |   E/S      |   O   |    -     |    1-1     | Objeto pessoa passado com o `idPessoa`.
  numeroTitulo          |    S       |   N   |    -     |    1-1     | ID da pessoa cadastrada no banco de dados.
  descricao             |   E/S      |   C   |    -     |    1-1     | Código da pessoa cadastrada no banco de dados.
  valorTitulo           |   E/S      |   C   |    -     |    1-1     | Nome da pessoa a ser cadastrada.
  dataEmissão           |   E/S      |   C   |    -     |    1-1     | Tipo de Pessoa é a identificação se `FISICA` ou `JURIDICA`.
  dataVencimento        |   E/S      |   C   |    -     |    1-1     | Tipo de Pessoa é a identificação se `FISICA` ou `JURIDICA`.
  valorJuros            |   E/S      |   D   |    -     |    1-1     | Nome da rua onde reside.
  valorMulta            |   E/S      |   D   |    -     |    1-1     | Bairro onde reside.
  valorAtualizado       |   E/S      |   D   |    -     |    1-1     | Bairro onde reside.
  dataPagamento         |   E/S      |   C   |    -     |    1-1     | Cidade onde reside.
  formaPagamento        |   E/S      |   O   |    -     |    1-1     | Estado onde reside.
  tipoTitulo            |   E/S      |   C   |    -     |    1-1     | Numero de onde reside.
  situacaoTitulo        |    S       |   C   |    -     |    1-1     | Complemento ao endereço.
:::

::: note
## Descrição do Objeto Pessoa

  Nome                  | Requisição | Tipo  | Tamanho  | Ocorrência | Observação
  --:                   |    --      | ----  |   --     |    --      | --
  idPessoa              |   E/S      |   O   |    -     |    1-1     | ID da pessoa cadastrada no banco de dados.
:::

::: note
## Descrição do Objeto Forma de Pagamento

  Nome                  | Requisição | Tipo  | Tamanho  | Ocorrência | Observação
  --:                   |    --      | ----  |   --     |    --      | --
  idFormaPagamento      |   E/S      |   O   |    -     |    1-1     | ID da forma de pagamento cadastrada no banco de dados.
:::

::: note
## Códigos de retorno 400
  Erro(s) que pode(m) ocorrer durante o processamento da requisição:

  Código | Mensagem
  --:    | ----
  -1     | Existe(m) campo(s) obrigatório(s) não informado(s).
  -2     | Existe(m) campo(s) inválido(s) na requisição.
  -11    | Não foi encontrado uma pessoa cadastrada com o ID {id_pessoa}.
  -12    | Não foi encontrado uma forma de pagamento cadastrada com o ID {id_forma_pagamento}.
  -13    | Data de vencimento anterior a data de emissão.
  -14    | Data de pagamento anterior a data de emissão.
:::

::: note
## Códigos de retorno 500
  Erro(s) que pode(m) ocorrer durante o processamento da requisição:

  Código | Mensagem
  --:    | ----
  -999   | Ocorreu um problema não identificado.
:::

+ Parameters

+ Request (application/json)

{
    {
        "pessoa": {
            "idPessoa": "19608bb1-f14e-4036-a42c-893a37db4922"
        },
        "descricao": "Teste",
        "valorTitulo": "100.00",
        "dataEmissão": "2023-05-30",
        "dataVencimento": "2023-06-26",
        "valorJuros": "5.0",
        "valorMulta": "10.0",
        "dataPagamento": "2023-06-26",
        "formaPagamento": {
            "idFormaPagamento": "c45784e3-ba60-4397-a484-eaae1ce30afe"
        },
        "tipoTitulo": "PAGAR"
    }
}

+ Response 201 (application/json)

{
    "numeroTitulo": 1,
    "pessoa": {
         "codigo": 1,
         "nome": "José Alves",
         "tipoPessoa": "FISICA",
         "cpfCnpj": "03045453522",
         "endereco": "Av. Amélia Amado",
         "bairro": "Centro",
         "cidade": "Itabuna",
         "numero": 45,
         "complemento": "apto 102",
         "cep": 45603595,
         "numeroTelefone": "73999999999",
         "dataNascimento": "1980-03-15",
         "tipoPessoaSistema": "CLIENTE",
         "idPessoa": "19608bb1-f14e-4036-a42c-893a37db4922"
    },
    "descricao": "Teste",
    "valorTitulo": 100.00,
    "dataEmissão": "2023-05-30",
    "valorJuros": 0.00,
    "valorMulta": 0.00,
    "formaPagamento": {
         "nome": "DINHEIRO",
         "idFormaPagamento": "c45784e3-ba60-4397-a484-eaae1ce30afe"
    },
    "tipoTitulo": "PAGAR",
    "situacaoTitulo": "ABERTO",
    "idTitulo": "4959fd8c-96e9-4a1b-b15a-f380675e8013"
}

+ Response 400 (application/json)

{
    "erros": [
        {
            "codigo": codigo,
            "mensagem": "Mensagem do erro."
        }
    ]
}

+ Response 500 (application/json)

{
    "erros": [
        {
            "codigo": -999,
            "mensagem": "Mensagem do erro."
        }
    ]
}